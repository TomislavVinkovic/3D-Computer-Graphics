//racunanje normala
/*
const float bias = 1.00001f;
Vec3f c = {
    (min.x + max.x) / 2.0f,
    (min.y + max.y) / 2.0f,
    (min.z + max.z) / 2.0f
};

Vec3f hit_minus_c = hit_point - c;
float dx = abs(min.x - max.x) / 2.0f;
float dy = abs(min.y - max.y) / 2.0f;
float dz = abs(min.z - max.z) / 2.0f;

int nx = static_cast<int>( hit_minus_c.x / dx * bias );
int ny = static_cast<int>( hit_minus_c.y / dy * bias );
int nz = static_cast<int>( hit_minus_c.z / dz * bias );
normal = {
    static_cast<float>(nx),
    static_cast<float>(ny),
    static_cast<float>(nz)
};
normal.normalize();
*/